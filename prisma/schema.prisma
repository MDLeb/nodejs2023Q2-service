// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  login     String    
  password  String
  version   Int       @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  Favorites Favorites[]
}

model Artist {
  id     String  @id @default(uuid())
  name   String  
  grammy Boolean @default(false)
  Album  Album[]
  Track  Track[]
  Favorites Favorites[]
}

model Album {
  id       String   @id @default(uuid())
  name     String
  year     Int
  artistId String?
  artist   Artist?  @relation(fields: [artistId], references: [id], onDelete: SetNull)
  Track    Track[]
  Favorites Favorites[]
}

model Track {
  id       String @id @default(uuid())
  name     String 
  artistId String?
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId  String?
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  duration Int
  Favorites Favorites[]
}

model Favorites {
  id      String  @id @default(uuid())
  userId  String?
  user    User?   @relation(fields: [userId], references: [id])  
  albums  Album[]
  tracks  Track[]
  artists Artist[]
}